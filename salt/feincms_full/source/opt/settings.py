# -*- coding: utf-8 -*-
from __future__ import unicode_literals

{% set project_name = salt['pillar.get']('project_name') %}
{% set allowed_hosts = salt['pillar.get'](project_name + ':allowed_hosts', ['127.0.0.1']) %}
{% set request_ignore_ip = salt['pillar.get'](project_name + ':request_ignore_ip', ['127.0.0.1']) %}
{% set blog_paginate_by = salt['pillar.get'](project_name + ':blog_paginate_by', 5) %}
{% set blog_title = salt['pillar.get'](project_name + ':blog_title', 'News') %}
{% set blog_description = salt['pillar.get'](project_name + ':blog_description', '-') %}
{% set haystack_search_results_per_page = salt['pillar.get'](project_name + ':haystack_search_results_per_page', 999) %}

"""
Django settings for {{ project_name }} project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$dy76%yq4sv$cnm_nm8!g)n$@qr_q8n$l9g_1gkk83)i1*v+dh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [{% for host in allowed_hosts %}{% if not loop.first %}, {% endif %}'{{ host }}'{% endfor %}]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'django.contrib.sitemaps',

    'haystack',
    'mptt',
    'feincms',
    'feincms.module.page',
    'feincms.module.medialibrary',
    'gallery',
    'form_designer',
    'flatblocks',
    'core',
    'easy_thumbnails',
    'email_obfuscator',
    'request',
    'analytics',
    'elephantblog',
    'taggit',
    'taggit_labels',
]

MIGRATION_MODULES = {
    'page': '{{ project_name }}.migrate.page',
    'medialibrary': '{{ project_name }}.migrate.medialibrary',
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'request.middleware.RequestMiddleware',
]

ROOT_URLCONF = '{{ project_name }}.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.static',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'feincms.context_processors.add_page_if_missing',
                'core.context_processors.default',
            ],
        },
    },
]

WSGI_APPLICATION = '{{ project_name }}.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

MEDIA_URL = '/media/'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LANGUAGES = (
    ('en', 'English'),
    ('es', 'Español'),
    ('ja', '日本語'),
    ('zh', '中文'),
)

SITE_ID = 1


#
# tinymce
#
FEINCMS_RICHTEXT_INIT_TEMPLATE = 'admin/content/richtext/init_tinymce_.html'


#
# analytics
#
REQUEST_IGNORE_IP = [{% for ip in request_ignore_ip %}{% if not loop.first %}, {% endif %}'{{ ip }}'{% endfor %}]
REQUEST_IGNORE_AJAX = True
REQUEST_IGNORE_PATHS = (
    r'^admin/',
    r'^__debug__/',
)
REQUEST_IGNORE_USER_AGENTS = (
    r'^$', # ignore requests with no user agent string set
    r'Googlebot',
    r'Baiduspider',
)

REQUEST_LOG_IP = False
REQUEST_IP_DUMMY = '1.2.3.4'

GOOGLE_ANALYTICS_MODEL = True


#
# elephantblog
#
def elephantblog_entry_url_app(self):
    from feincms.content.application.models import app_reverse
    return app_reverse(
        'elephantblog_entry_detail', 
        'elephantblog.urls', 
        kwargs={
            'year': self.published_on.strftime('%Y'),
            'month': self.published_on.strftime('%m'),
            'day': self.published_on.strftime('%d'),
            'slug': self.slug,
        }
    )


def elephantblog_categorytranslation_url_app(self):
    from feincms.content.application.models import app_reverse
    return app_reverse(
        'elephantblog_category_detail', 
        'elephantblog.urls', 
        kwargs={
            'slug': self.slug,
        }
    )

ABSOLUTE_URL_OVERRIDES = {
    'elephantblog.entry': elephantblog_entry_url_app,
    'elephantblog.categorytranslation': elephantblog_categorytranslation_url_app,
}

BLOG_PAGINATE_BY = {{ blog_paginate_by }}
BLOG_TITLE = '{{ blog_title }}'
BLOG_DESCRIPTION = '{{ blog_description }}'

TAGGIT_CASE_INSENSITIVE = True


#
# search
#
HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
        'PATH': os.path.join(os.path.dirname(__file__), 'whoosh_index'),
    },
}
HAYSTACK_SEARCH_RESULTS_PER_PAGE = {{ haystack_search_results_per_page }}


#
# local settings
#
try:
    from settings_local import *
except ImportError:
    pass
